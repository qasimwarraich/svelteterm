stages:
    - build
    - deploy

workflow:
    rules:
        - if: $CI_COMMIT_BRANCH == "main"

build-backend:
    image: golang:1.18

    stage: build

    script:
        - cd backend
        - mkdir -p serverbin/
        - go build -o serverbin/go-fiber-server

    artifacts:
        name: server
        paths:
            - backend/serverbin/go-fiber-server

build-frontend-prod:
    image: node:16

    stage: build
    only:
        - main
    environment: production

    script:
        - cd frontend
        - echo $VITE_APIENDPOINT >> .env
        - echo $VITE_DOCKERENDPOINT >> .env
        - echo $VITE_WEBSOCKETATTACH >> .env
        - npm install
        - npm run build

    artifacts:
        name: app
        paths:
            - frontend/dist/

build-frontend-fedora:
    image: node:16

    stage: build
    only:
        - main
    environment: fedora

    script:
        - cd frontend
        - echo $VITE_APIENDPOINT >> .env
        - echo $VITE_DOCKERENDPOINT >> .env
        - echo $VITE_WEBSOCKETATTACH >> .env
        - npm install
        - npm run build

    artifacts:
        name: app
        paths:
            - frontend/dist/

build-frontend-fedora-cli:
    image: node:16

    stage: build
    only:
        - cli-only
    environment: fedora-cli

    script:
        - cd frontend
        - echo $VITE_APIENDPOINT >> .env
        - echo $VITE_DOCKERENDPOINT >> .env
        - echo $VITE_WEBSOCKETATTACH >> .env
        - npm install
        - npm run build

    artifacts:
        name: app
        paths:
            - frontend/dist/

deploy-job-ubuntu:
    stage: deploy
    only:
        - main
    environment: production
    allow_failure: false
    dependencies:
        - build-backend
        - build-frontend-prod

    image: alpine

    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
    script:
        - echo "=Deploying Frontend="
        - echo "Removing Old Static Web Content"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm -rf /var/www/tutor.chistole.ch/dist";
        - echo "Adding New Static Web Content"
        - scp -r -o StrictHostKeyChecking=no frontend/dist $SSH_USER@$SSH_SERVER:/var/www/tutor.chistole.ch/
        - echo "Adjusting File Permissions"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "chown -R $SERVER_USER /var/www/tutor.chistole.ch/*";
        - echo "=Deploying Backend="
        - echo "Creating Server .env File"
        - echo PORT=$PORT >> .env
        - echo LOGPATH=$LOGPATH >> .env
        - echo CERTPATH=$CERTPATH >> .env
        - echo CERTKEYPATH=$CERTKEYPATH >> .env
        - echo DOCKERIMAGE=$DOCKERIMAGE >> .env
        - echo "Removing Old Server Binary"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm /root/server/*";
        - echo "Adding New Server Binary And .env File"
        - scp -r -o StrictHostKeyChecking=no .env backend/serverbin/go-fiber-server $SSH_USER@$SSH_SERVER:/root/server/
        - echo "Restarting Server Systemd Service"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "systemctl restart fiber-server.service"
        - echo "Deployment Complete!"

deploy-job-fedora:
    stage: deploy
    only:
        - main
    environment: fedora
    allow_failure: false
    dependencies:
        - build-backend
        - build-frontend-fedora
    image: alpine

    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
    script:
        - echo "=Deploying Frontend="
        - echo "Removing Old Static Web Content"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm -rf /var/www/clitutor.chistole.ch/dist";
        - echo "Adding New Static Web Content"
        - scp -r -o StrictHostKeyChecking=no frontend/dist $SSH_USER@$SSH_SERVER:/var/www/clitutor.chistole.ch/
        - echo "Adjusting File Permissions"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "chown -R $SERVER_USER /var/www/clitutor.chistole.ch/*";
        - echo "=Deploying Backend="
        - echo "Creating Server .env File"
        - echo PORT=$PORT >> .env
        - echo LOGPATH=$LOGPATH >> .env
        - echo CERTPATH=$CERTPATH >> .env
        - echo CERTKEYPATH=$CERTKEYPATH >> .env
        - echo DOCKERIMAGE=$DOCKERIMAGE >> .env
        - echo "Removing Old Server Binary"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm /root/server/*";
        - echo "Adding New Server Binary And .env File"
        - scp -r -o StrictHostKeyChecking=no .env backend/serverbin/go-fiber-server $SSH_USER@$SSH_SERVER:/root/server/
        - echo "Restarting Server Systemd Service"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "systemctl restart fiber-server.service"
        - echo "Deployment Complete!"

deploy-job-fedora-cli:
    stage: deploy
    only:
        - cli-only
    environment: fedora-cli
    allow_failure: false
    dependencies:
        - build-backend
        - build-frontend-fedora-cli
    image: alpine

    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
    script:
        - echo "=Deploying Frontend="
        - echo "Removing Old Static Web Content"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm -rf /var/www/cli.chistole.ch/dist";
        - echo "Adding New Static Web Content"
        - scp -r -o StrictHostKeyChecking=no frontend/dist $SSH_USER@$SSH_SERVER:/var/www/cli.chistole.ch/
        - echo "Adjusting File Permissions"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "chown -R $SERVER_USER /var/www/cli.chistole.ch/*";
        - echo "=Deploying Backend="
        - echo "Creating Server .env File"
        - echo PORT=$PORT >> .env
        - echo LOGPATH=$LOGPATH >> .env
        - echo CERTPATH=$CERTPATH >> .env
        - echo CERTKEYPATH=$CERTKEYPATH >> .env
        - echo DOCKERIMAGE=$DOCKERIMAGE >> .env
        - echo "Removing Old Server Binary"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "rm /root/server/*";
        - echo "Adding New Server Binary And .env File"
        - scp -r -o StrictHostKeyChecking=no .env backend/serverbin/go-fiber-server $SSH_USER@$SSH_SERVER:/root/server/
        - echo "Restarting Server Systemd Service"
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER "systemctl restart fiber-server.service"
        - echo "Deployment Complete!"
