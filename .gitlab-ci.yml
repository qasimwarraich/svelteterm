
stages: 
    - build
    - deploy


build-backend:
    image: golang:1.18
 
    stage: build

    script:
        - cd backend
        - mkdir -p serverbin/
        - go build -o serverbin/server ./src/main.go
  
    artifacts:
        name: server
        paths:
            - serverbin/server

build-frontend:  
    image: node:16

    stage: build

    script:
        - cd frontend
        - npm install
        - npm run build

    artifacts:
        name: app
        paths:
            - dist/


deploy-job-test:   
    stage: deploy 
    when: manual
    dependencies:
        - build-backend
        - build-frontend
    
    image: alpine

    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
    script:
        - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER;
        - cd
        - touch spam.txt
        - echo $PORT > spam.txt
        - mkdir -p test        